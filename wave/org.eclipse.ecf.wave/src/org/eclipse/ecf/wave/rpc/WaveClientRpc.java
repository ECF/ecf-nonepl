// Generated by the protocol buffer compiler.  DO NOT EDIT!
package org.eclipse.ecf.wave.rpc;

public final class WaveClientRpc {
  private WaveClientRpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ProtocolOpenRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ProtocolOpenRequest.newBuilder() to construct.
    private ProtocolOpenRequest() {
      initFields();
    }
    private ProtocolOpenRequest(boolean noInit) {}
    
    private static final ProtocolOpenRequest defaultInstance;
    public static ProtocolOpenRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProtocolOpenRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.eclipse.ecf.wave.rpc.WaveClientRpc.internal_static_waveserver_ProtocolOpenRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.eclipse.ecf.wave.rpc.WaveClientRpc.internal_static_waveserver_ProtocolOpenRequest_fieldAccessorTable;
    }
    
    // required string participant_id = 1;
    public static final int PARTICIPANT_ID_FIELD_NUMBER = 1;
    private boolean hasParticipantId;
    private java.lang.String participantId_ = "";
    public boolean hasParticipantId() { return hasParticipantId; }
    public java.lang.String getParticipantId() { return participantId_; }
    
    // required string wave_id = 2;
    public static final int WAVE_ID_FIELD_NUMBER = 2;
    private boolean hasWaveId;
    private java.lang.String waveId_ = "";
    public boolean hasWaveId() { return hasWaveId; }
    public java.lang.String getWaveId() { return waveId_; }
    
    // repeated string wavelet_id_prefix = 3;
    public static final int WAVELET_ID_PREFIX_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> waveletIdPrefix_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getWaveletIdPrefixList() {
      return waveletIdPrefix_;
    }
    public int getWaveletIdPrefixCount() { return waveletIdPrefix_.size(); }
    public java.lang.String getWaveletIdPrefix(int index) {
      return waveletIdPrefix_.get(index);
    }
    
    // optional int32 maximum_wavelets = 4;
    public static final int MAXIMUM_WAVELETS_FIELD_NUMBER = 4;
    private boolean hasMaximumWavelets;
    private int maximumWavelets_ = 0;
    public boolean hasMaximumWavelets() { return hasMaximumWavelets; }
    public int getMaximumWavelets() { return maximumWavelets_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasParticipantId) return false;
      if (!hasWaveId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasParticipantId()) {
        output.writeString(1, getParticipantId());
      }
      if (hasWaveId()) {
        output.writeString(2, getWaveId());
      }
      for (java.lang.String element : getWaveletIdPrefixList()) {
        output.writeString(3, element);
      }
      if (hasMaximumWavelets()) {
        output.writeInt32(4, getMaximumWavelets());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasParticipantId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getParticipantId());
      }
      if (hasWaveId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getWaveId());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getWaveletIdPrefixList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getWaveletIdPrefixList().size();
      }
      if (hasMaximumWavelets()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getMaximumWavelets());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest result;
      
      // Construct using org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest();
        return builder;
      }
      
      protected org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest.getDescriptor();
      }
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest getDefaultInstanceForType() {
        return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.waveletIdPrefix_ != java.util.Collections.EMPTY_LIST) {
          result.waveletIdPrefix_ =
            java.util.Collections.unmodifiableList(result.waveletIdPrefix_);
        }
        org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest) {
          return mergeFrom((org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest other) {
        if (other == org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest.getDefaultInstance()) return this;
        if (other.hasParticipantId()) {
          setParticipantId(other.getParticipantId());
        }
        if (other.hasWaveId()) {
          setWaveId(other.getWaveId());
        }
        if (!other.waveletIdPrefix_.isEmpty()) {
          if (result.waveletIdPrefix_.isEmpty()) {
            result.waveletIdPrefix_ = new java.util.ArrayList<java.lang.String>();
          }
          result.waveletIdPrefix_.addAll(other.waveletIdPrefix_);
        }
        if (other.hasMaximumWavelets()) {
          setMaximumWavelets(other.getMaximumWavelets());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setParticipantId(input.readString());
              break;
            }
            case 18: {
              setWaveId(input.readString());
              break;
            }
            case 26: {
              addWaveletIdPrefix(input.readString());
              break;
            }
            case 32: {
              setMaximumWavelets(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string participant_id = 1;
      public boolean hasParticipantId() {
        return result.hasParticipantId();
      }
      public java.lang.String getParticipantId() {
        return result.getParticipantId();
      }
      public Builder setParticipantId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasParticipantId = true;
        result.participantId_ = value;
        return this;
      }
      public Builder clearParticipantId() {
        result.hasParticipantId = false;
        result.participantId_ = getDefaultInstance().getParticipantId();
        return this;
      }
      
      // required string wave_id = 2;
      public boolean hasWaveId() {
        return result.hasWaveId();
      }
      public java.lang.String getWaveId() {
        return result.getWaveId();
      }
      public Builder setWaveId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveId = true;
        result.waveId_ = value;
        return this;
      }
      public Builder clearWaveId() {
        result.hasWaveId = false;
        result.waveId_ = getDefaultInstance().getWaveId();
        return this;
      }
      
      // repeated string wavelet_id_prefix = 3;
      public java.util.List<java.lang.String> getWaveletIdPrefixList() {
        return java.util.Collections.unmodifiableList(result.waveletIdPrefix_);
      }
      public int getWaveletIdPrefixCount() {
        return result.getWaveletIdPrefixCount();
      }
      public java.lang.String getWaveletIdPrefix(int index) {
        return result.getWaveletIdPrefix(index);
      }
      public Builder setWaveletIdPrefix(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.waveletIdPrefix_.set(index, value);
        return this;
      }
      public Builder addWaveletIdPrefix(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.waveletIdPrefix_.isEmpty()) {
          result.waveletIdPrefix_ = new java.util.ArrayList<java.lang.String>();
        }
        result.waveletIdPrefix_.add(value);
        return this;
      }
      public Builder addAllWaveletIdPrefix(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.waveletIdPrefix_.isEmpty()) {
          result.waveletIdPrefix_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.waveletIdPrefix_);
        return this;
      }
      public Builder clearWaveletIdPrefix() {
        result.waveletIdPrefix_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 maximum_wavelets = 4;
      public boolean hasMaximumWavelets() {
        return result.hasMaximumWavelets();
      }
      public int getMaximumWavelets() {
        return result.getMaximumWavelets();
      }
      public Builder setMaximumWavelets(int value) {
        result.hasMaximumWavelets = true;
        result.maximumWavelets_ = value;
        return this;
      }
      public Builder clearMaximumWavelets() {
        result.hasMaximumWavelets = false;
        result.maximumWavelets_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolOpenRequest)
    }
    
    static {
      defaultInstance = new ProtocolOpenRequest(true);
      org.eclipse.ecf.wave.rpc.WaveClientRpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:waveserver.ProtocolOpenRequest)
  }
  
  public static final class ProtocolWaveletUpdate extends
      com.google.protobuf.GeneratedMessage {
    // Use ProtocolWaveletUpdate.newBuilder() to construct.
    private ProtocolWaveletUpdate() {
      initFields();
    }
    private ProtocolWaveletUpdate(boolean noInit) {}
    
    private static final ProtocolWaveletUpdate defaultInstance;
    public static ProtocolWaveletUpdate getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProtocolWaveletUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.eclipse.ecf.wave.rpc.WaveClientRpc.internal_static_waveserver_ProtocolWaveletUpdate_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.eclipse.ecf.wave.rpc.WaveClientRpc.internal_static_waveserver_ProtocolWaveletUpdate_fieldAccessorTable;
    }
    
    // required string wavelet_name = 1;
    public static final int WAVELET_NAME_FIELD_NUMBER = 1;
    private boolean hasWaveletName;
    private java.lang.String waveletName_ = "";
    public boolean hasWaveletName() { return hasWaveletName; }
    public java.lang.String getWaveletName() { return waveletName_; }
    
    // repeated .federation.ProtocolWaveletDelta applied_delta = 2;
    public static final int APPLIED_DELTA_FIELD_NUMBER = 2;
    private java.util.List<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> appliedDelta_ =
      java.util.Collections.emptyList();
    public java.util.List<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> getAppliedDeltaList() {
      return appliedDelta_;
    }
    public int getAppliedDeltaCount() { return appliedDelta_.size(); }
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getAppliedDelta(int index) {
      return appliedDelta_.get(index);
    }
    
    // optional .federation.ProtocolHashedVersion commit_notice = 3;
    public static final int COMMIT_NOTICE_FIELD_NUMBER = 3;
    private boolean hasCommitNotice;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion commitNotice_;
    public boolean hasCommitNotice() { return hasCommitNotice; }
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitNotice() { return commitNotice_; }
    
    // optional .federation.ProtocolHashedVersion resulting_version = 4;
    public static final int RESULTING_VERSION_FIELD_NUMBER = 4;
    private boolean hasResultingVersion;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion resultingVersion_;
    public boolean hasResultingVersion() { return hasResultingVersion; }
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion() { return resultingVersion_; }
    
    private void initFields() {
      commitNotice_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
      resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasWaveletName) return false;
      for (org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta element : getAppliedDeltaList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasCommitNotice()) {
        if (!getCommitNotice().isInitialized()) return false;
      }
      if (hasResultingVersion()) {
        if (!getResultingVersion().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWaveletName()) {
        output.writeString(1, getWaveletName());
      }
      for (org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta element : getAppliedDeltaList()) {
        output.writeMessage(2, element);
      }
      if (hasCommitNotice()) {
        output.writeMessage(3, getCommitNotice());
      }
      if (hasResultingVersion()) {
        output.writeMessage(4, getResultingVersion());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWaveletName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getWaveletName());
      }
      for (org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta element : getAppliedDeltaList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasCommitNotice()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCommitNotice());
      }
      if (hasResultingVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getResultingVersion());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate result;
      
      // Construct using org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate();
        return builder;
      }
      
      protected org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.getDescriptor();
      }
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate getDefaultInstanceForType() {
        return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.appliedDelta_ != java.util.Collections.EMPTY_LIST) {
          result.appliedDelta_ =
            java.util.Collections.unmodifiableList(result.appliedDelta_);
        }
        org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate) {
          return mergeFrom((org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate other) {
        if (other == org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance()) return this;
        if (other.hasWaveletName()) {
          setWaveletName(other.getWaveletName());
        }
        if (!other.appliedDelta_.isEmpty()) {
          if (result.appliedDelta_.isEmpty()) {
            result.appliedDelta_ = new java.util.ArrayList<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta>();
          }
          result.appliedDelta_.addAll(other.appliedDelta_);
        }
        if (other.hasCommitNotice()) {
          mergeCommitNotice(other.getCommitNotice());
        }
        if (other.hasResultingVersion()) {
          mergeResultingVersion(other.getResultingVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setWaveletName(input.readString());
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAppliedDelta(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder();
              if (hasCommitNotice()) {
                subBuilder.mergeFrom(getCommitNotice());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCommitNotice(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder();
              if (hasResultingVersion()) {
                subBuilder.mergeFrom(getResultingVersion());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResultingVersion(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string wavelet_name = 1;
      public boolean hasWaveletName() {
        return result.hasWaveletName();
      }
      public java.lang.String getWaveletName() {
        return result.getWaveletName();
      }
      public Builder setWaveletName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveletName = true;
        result.waveletName_ = value;
        return this;
      }
      public Builder clearWaveletName() {
        result.hasWaveletName = false;
        result.waveletName_ = getDefaultInstance().getWaveletName();
        return this;
      }
      
      // repeated .federation.ProtocolWaveletDelta applied_delta = 2;
      public java.util.List<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> getAppliedDeltaList() {
        return java.util.Collections.unmodifiableList(result.appliedDelta_);
      }
      public int getAppliedDeltaCount() {
        return result.getAppliedDeltaCount();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getAppliedDelta(int index) {
        return result.getAppliedDelta(index);
      }
      public Builder setAppliedDelta(int index, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.appliedDelta_.set(index, value);
        return this;
      }
      public Builder setAppliedDelta(int index, org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        result.appliedDelta_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAppliedDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.appliedDelta_.isEmpty()) {
          result.appliedDelta_ = new java.util.ArrayList<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta>();
        }
        result.appliedDelta_.add(value);
        return this;
      }
      public Builder addAppliedDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        if (result.appliedDelta_.isEmpty()) {
          result.appliedDelta_ = new java.util.ArrayList<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta>();
        }
        result.appliedDelta_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAppliedDelta(
          java.lang.Iterable<? extends org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta> values) {
        if (result.appliedDelta_.isEmpty()) {
          result.appliedDelta_ = new java.util.ArrayList<org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta>();
        }
        super.addAll(values, result.appliedDelta_);
        return this;
      }
      public Builder clearAppliedDelta() {
        result.appliedDelta_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .federation.ProtocolHashedVersion commit_notice = 3;
      public boolean hasCommitNotice() {
        return result.hasCommitNotice();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getCommitNotice() {
        return result.getCommitNotice();
      }
      public Builder setCommitNotice(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCommitNotice = true;
        result.commitNotice_ = value;
        return this;
      }
      public Builder setCommitNotice(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        result.hasCommitNotice = true;
        result.commitNotice_ = builderForValue.build();
        return this;
      }
      public Builder mergeCommitNotice(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (result.hasCommitNotice() &&
            result.commitNotice_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
          result.commitNotice_ =
            org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(result.commitNotice_).mergeFrom(value).buildPartial();
        } else {
          result.commitNotice_ = value;
        }
        result.hasCommitNotice = true;
        return this;
      }
      public Builder clearCommitNotice() {
        result.hasCommitNotice = false;
        result.commitNotice_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        return this;
      }
      
      // optional .federation.ProtocolHashedVersion resulting_version = 4;
      public boolean hasResultingVersion() {
        return result.hasResultingVersion();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getResultingVersion() {
        return result.getResultingVersion();
      }
      public Builder setResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResultingVersion = true;
        result.resultingVersion_ = value;
        return this;
      }
      public Builder setResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        result.hasResultingVersion = true;
        result.resultingVersion_ = builderForValue.build();
        return this;
      }
      public Builder mergeResultingVersion(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (result.hasResultingVersion() &&
            result.resultingVersion_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
          result.resultingVersion_ =
            org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(result.resultingVersion_).mergeFrom(value).buildPartial();
        } else {
          result.resultingVersion_ = value;
        }
        result.hasResultingVersion = true;
        return this;
      }
      public Builder clearResultingVersion() {
        result.hasResultingVersion = false;
        result.resultingVersion_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolWaveletUpdate)
    }
    
    static {
      defaultInstance = new ProtocolWaveletUpdate(true);
      org.eclipse.ecf.wave.rpc.WaveClientRpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:waveserver.ProtocolWaveletUpdate)
  }
  
  public static final class ProtocolSubmitRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ProtocolSubmitRequest.newBuilder() to construct.
    private ProtocolSubmitRequest() {
      initFields();
    }
    private ProtocolSubmitRequest(boolean noInit) {}
    
    private static final ProtocolSubmitRequest defaultInstance;
    public static ProtocolSubmitRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProtocolSubmitRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.eclipse.ecf.wave.rpc.WaveClientRpc.internal_static_waveserver_ProtocolSubmitRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.eclipse.ecf.wave.rpc.WaveClientRpc.internal_static_waveserver_ProtocolSubmitRequest_fieldAccessorTable;
    }
    
    // required string wavelet_name = 1;
    public static final int WAVELET_NAME_FIELD_NUMBER = 1;
    private boolean hasWaveletName;
    private java.lang.String waveletName_ = "";
    public boolean hasWaveletName() { return hasWaveletName; }
    public java.lang.String getWaveletName() { return waveletName_; }
    
    // required .federation.ProtocolWaveletDelta delta = 2;
    public static final int DELTA_FIELD_NUMBER = 2;
    private boolean hasDelta;
    private org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta delta_;
    public boolean hasDelta() { return hasDelta; }
    public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() { return delta_; }
    
    private void initFields() {
      delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasWaveletName) return false;
      if (!hasDelta) return false;
      if (!getDelta().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasWaveletName()) {
        output.writeString(1, getWaveletName());
      }
      if (hasDelta()) {
        output.writeMessage(2, getDelta());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasWaveletName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getWaveletName());
      }
      if (hasDelta()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDelta());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest result;
      
      // Construct using org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest();
        return builder;
      }
      
      protected org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest.getDescriptor();
      }
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest getDefaultInstanceForType() {
        return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest) {
          return mergeFrom((org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest other) {
        if (other == org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest.getDefaultInstance()) return this;
        if (other.hasWaveletName()) {
          setWaveletName(other.getWaveletName());
        }
        if (other.hasDelta()) {
          mergeDelta(other.getDelta());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setWaveletName(input.readString());
              break;
            }
            case 18: {
              org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder();
              if (hasDelta()) {
                subBuilder.mergeFrom(getDelta());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDelta(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string wavelet_name = 1;
      public boolean hasWaveletName() {
        return result.hasWaveletName();
      }
      public java.lang.String getWaveletName() {
        return result.getWaveletName();
      }
      public Builder setWaveletName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasWaveletName = true;
        result.waveletName_ = value;
        return this;
      }
      public Builder clearWaveletName() {
        result.hasWaveletName = false;
        result.waveletName_ = getDefaultInstance().getWaveletName();
        return this;
      }
      
      // required .federation.ProtocolWaveletDelta delta = 2;
      public boolean hasDelta() {
        return result.hasDelta();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta getDelta() {
        return result.getDelta();
      }
      public Builder setDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDelta = true;
        result.delta_ = value;
        return this;
      }
      public Builder setDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.Builder builderForValue) {
        result.hasDelta = true;
        result.delta_ = builderForValue.build();
        return this;
      }
      public Builder mergeDelta(org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta value) {
        if (result.hasDelta() &&
            result.delta_ != org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance()) {
          result.delta_ =
            org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.newBuilder(result.delta_).mergeFrom(value).buildPartial();
        } else {
          result.delta_ = value;
        }
        result.hasDelta = true;
        return this;
      }
      public Builder clearDelta() {
        result.hasDelta = false;
        result.delta_ = org.waveprotocol.wave.federation.Proto.ProtocolWaveletDelta.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolSubmitRequest)
    }
    
    static {
      defaultInstance = new ProtocolSubmitRequest(true);
      org.eclipse.ecf.wave.rpc.WaveClientRpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:waveserver.ProtocolSubmitRequest)
  }
  
  public static final class ProtocolSubmitResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ProtocolSubmitResponse.newBuilder() to construct.
    private ProtocolSubmitResponse() {
      initFields();
    }
    private ProtocolSubmitResponse(boolean noInit) {}
    
    private static final ProtocolSubmitResponse defaultInstance;
    public static ProtocolSubmitResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProtocolSubmitResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.eclipse.ecf.wave.rpc.WaveClientRpc.internal_static_waveserver_ProtocolSubmitResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.eclipse.ecf.wave.rpc.WaveClientRpc.internal_static_waveserver_ProtocolSubmitResponse_fieldAccessorTable;
    }
    
    // required int32 operations_applied = 1;
    public static final int OPERATIONS_APPLIED_FIELD_NUMBER = 1;
    private boolean hasOperationsApplied;
    private int operationsApplied_ = 0;
    public boolean hasOperationsApplied() { return hasOperationsApplied; }
    public int getOperationsApplied() { return operationsApplied_; }
    
    // optional string error_message = 2;
    public static final int ERROR_MESSAGE_FIELD_NUMBER = 2;
    private boolean hasErrorMessage;
    private java.lang.String errorMessage_ = "";
    public boolean hasErrorMessage() { return hasErrorMessage; }
    public java.lang.String getErrorMessage() { return errorMessage_; }
    
    // optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;
    public static final int HASHED_VERSION_AFTER_APPLICATION_FIELD_NUMBER = 3;
    private boolean hasHashedVersionAfterApplication;
    private org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion hashedVersionAfterApplication_;
    public boolean hasHashedVersionAfterApplication() { return hasHashedVersionAfterApplication; }
    public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication() { return hashedVersionAfterApplication_; }
    
    private void initFields() {
      hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasOperationsApplied) return false;
      if (hasHashedVersionAfterApplication()) {
        if (!getHashedVersionAfterApplication().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOperationsApplied()) {
        output.writeInt32(1, getOperationsApplied());
      }
      if (hasErrorMessage()) {
        output.writeString(2, getErrorMessage());
      }
      if (hasHashedVersionAfterApplication()) {
        output.writeMessage(3, getHashedVersionAfterApplication());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOperationsApplied()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getOperationsApplied());
      }
      if (hasErrorMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getErrorMessage());
      }
      if (hasHashedVersionAfterApplication()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getHashedVersionAfterApplication());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse result;
      
      // Construct using org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse();
        return builder;
      }
      
      protected org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.getDescriptor();
      }
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse getDefaultInstanceForType() {
        return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse) {
          return mergeFrom((org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse other) {
        if (other == org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance()) return this;
        if (other.hasOperationsApplied()) {
          setOperationsApplied(other.getOperationsApplied());
        }
        if (other.hasErrorMessage()) {
          setErrorMessage(other.getErrorMessage());
        }
        if (other.hasHashedVersionAfterApplication()) {
          mergeHashedVersionAfterApplication(other.getHashedVersionAfterApplication());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setOperationsApplied(input.readInt32());
              break;
            }
            case 18: {
              setErrorMessage(input.readString());
              break;
            }
            case 26: {
              org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder subBuilder = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder();
              if (hasHashedVersionAfterApplication()) {
                subBuilder.mergeFrom(getHashedVersionAfterApplication());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHashedVersionAfterApplication(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int32 operations_applied = 1;
      public boolean hasOperationsApplied() {
        return result.hasOperationsApplied();
      }
      public int getOperationsApplied() {
        return result.getOperationsApplied();
      }
      public Builder setOperationsApplied(int value) {
        result.hasOperationsApplied = true;
        result.operationsApplied_ = value;
        return this;
      }
      public Builder clearOperationsApplied() {
        result.hasOperationsApplied = false;
        result.operationsApplied_ = 0;
        return this;
      }
      
      // optional string error_message = 2;
      public boolean hasErrorMessage() {
        return result.hasErrorMessage();
      }
      public java.lang.String getErrorMessage() {
        return result.getErrorMessage();
      }
      public Builder setErrorMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder clearErrorMessage() {
        result.hasErrorMessage = false;
        result.errorMessage_ = getDefaultInstance().getErrorMessage();
        return this;
      }
      
      // optional .federation.ProtocolHashedVersion hashed_version_after_application = 3;
      public boolean hasHashedVersionAfterApplication() {
        return result.hasHashedVersionAfterApplication();
      }
      public org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion getHashedVersionAfterApplication() {
        return result.getHashedVersionAfterApplication();
      }
      public Builder setHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHashedVersionAfterApplication = true;
        result.hashedVersionAfterApplication_ = value;
        return this;
      }
      public Builder setHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.Builder builderForValue) {
        result.hasHashedVersionAfterApplication = true;
        result.hashedVersionAfterApplication_ = builderForValue.build();
        return this;
      }
      public Builder mergeHashedVersionAfterApplication(org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion value) {
        if (result.hasHashedVersionAfterApplication() &&
            result.hashedVersionAfterApplication_ != org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance()) {
          result.hashedVersionAfterApplication_ =
            org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.newBuilder(result.hashedVersionAfterApplication_).mergeFrom(value).buildPartial();
        } else {
          result.hashedVersionAfterApplication_ = value;
        }
        result.hasHashedVersionAfterApplication = true;
        return this;
      }
      public Builder clearHashedVersionAfterApplication() {
        result.hasHashedVersionAfterApplication = false;
        result.hashedVersionAfterApplication_ = org.waveprotocol.wave.federation.Proto.ProtocolHashedVersion.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:waveserver.ProtocolSubmitResponse)
    }
    
    static {
      defaultInstance = new ProtocolSubmitResponse(true);
      org.eclipse.ecf.wave.rpc.WaveClientRpc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:waveserver.ProtocolSubmitResponse)
  }
  
  public static abstract class ProtocolWaveClientRpc
      implements com.google.protobuf.Service {
    protected ProtocolWaveClientRpc() {}
    
    public interface Interface {
      public abstract void open(
          com.google.protobuf.RpcController controller,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest request,
          com.google.protobuf.RpcCallback<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate> done);
      
      public abstract void submit(
          com.google.protobuf.RpcController controller,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest request,
          com.google.protobuf.RpcCallback<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new ProtocolWaveClientRpc() {
        @Override
        public  void open(
            com.google.protobuf.RpcController controller,
            org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest request,
            com.google.protobuf.RpcCallback<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate> done) {
          impl.open(controller, request, done);
        }
        
        @Override
        public  void submit(
            com.google.protobuf.RpcController controller,
            org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest request,
            com.google.protobuf.RpcCallback<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse> done) {
          impl.submit(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.open(controller, (org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest)request);
            case 1:
              return impl.submit(controller, (org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest.getDefaultInstance();
            case 1:
              return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance();
            case 1:
              return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void open(
        com.google.protobuf.RpcController controller,
        org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest request,
        com.google.protobuf.RpcCallback<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate> done);
    
    public abstract void submit(
        com.google.protobuf.RpcController controller,
        org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest request,
        com.google.protobuf.RpcCallback<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.eclipse.ecf.wave.rpc.WaveClientRpc.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.open(controller, (org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest)request,
            com.google.protobuf.RpcUtil.<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate>specializeCallback(
              done));
          return;
        case 1:
          this.submit(controller, (org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest)request,
            com.google.protobuf.RpcUtil.<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest.getDefaultInstance();
        case 1:
          return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance();
        case 1:
          return org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveClientRpc implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void open(
          com.google.protobuf.RpcController controller,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest request,
          com.google.protobuf.RpcCallback<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.class,
            org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance()));
      }
      
      public  void submit(
          com.google.protobuf.RpcController controller,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest request,
          com.google.protobuf.RpcCallback<org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.class,
            org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate open(
          com.google.protobuf.RpcController controller,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest request)
          throws com.google.protobuf.ServiceException;
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse submit(
          com.google.protobuf.RpcController controller,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate open(
          com.google.protobuf.RpcController controller,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.getDefaultInstance());
      }
      
      
      public org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse submit(
          com.google.protobuf.RpcController controller,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolOpenRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolOpenRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolWaveletUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolWaveletUpdate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolSubmitRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolSubmitRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_waveserver_ProtocolSubmitResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_waveserver_ProtocolSubmitResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nEorg/waveprotocol/wave/examples/fedone/" +
      "waveserver/waveclient-rpc.proto\022\nwaveser" +
      "ver\0323org/waveprotocol/wave/examples/fedo" +
      "ne/rpc/rpc.proto\0326org/waveprotocol/wave/" +
      "federation/federation.protodevel\"s\n\023Prot" +
      "ocolOpenRequest\022\026\n\016participant_id\030\001 \002(\t\022" +
      "\017\n\007wave_id\030\002 \002(\t\022\031\n\021wavelet_id_prefix\030\003 " +
      "\003(\t\022\030\n\020maximum_wavelets\030\004 \001(\005\"\336\001\n\025Protoc" +
      "olWaveletUpdate\022\024\n\014wavelet_name\030\001 \002(\t\0227\n" +
      "\rapplied_delta\030\002 \003(\0132 .federation.Protoc",
      "olWaveletDelta\0228\n\rcommit_notice\030\003 \001(\0132!." +
      "federation.ProtocolHashedVersion\022<\n\021resu" +
      "lting_version\030\004 \001(\0132!.federation.Protoco" +
      "lHashedVersion\"^\n\025ProtocolSubmitRequest\022" +
      "\024\n\014wavelet_name\030\001 \002(\t\022/\n\005delta\030\002 \002(\0132 .f" +
      "ederation.ProtocolWaveletDelta\"\230\001\n\026Proto" +
      "colSubmitResponse\022\032\n\022operations_applied\030" +
      "\001 \002(\005\022\025\n\rerror_message\030\002 \001(\t\022K\n hashed_v" +
      "ersion_after_application\030\003 \001(\0132!.federat" +
      "ion.ProtocolHashedVersion2\271\001\n\025ProtocolWa",
      "veClientRpc\022O\n\004Open\022\037.waveserver.Protoco" +
      "lOpenRequest\032!.waveserver.ProtocolWavele" +
      "tUpdate\"\003\330>\001\022O\n\006Submit\022!.waveserver.Prot" +
      "ocolSubmitRequest\032\".waveserver.ProtocolS" +
      "ubmitResponseBA\n0org.waveprotocol.wave.e" +
      "xamples.fedone.waveserverB\rWaveClientRpc"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_waveserver_ProtocolOpenRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_waveserver_ProtocolOpenRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolOpenRequest_descriptor,
              new java.lang.String[] { "ParticipantId", "WaveId", "WaveletIdPrefix", "MaximumWavelets", },
              org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest.class,
              org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolOpenRequest.Builder.class);
          internal_static_waveserver_ProtocolWaveletUpdate_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_waveserver_ProtocolWaveletUpdate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolWaveletUpdate_descriptor,
              new java.lang.String[] { "WaveletName", "AppliedDelta", "CommitNotice", "ResultingVersion", },
              org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.class,
              org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolWaveletUpdate.Builder.class);
          internal_static_waveserver_ProtocolSubmitRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_waveserver_ProtocolSubmitRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolSubmitRequest_descriptor,
              new java.lang.String[] { "WaveletName", "Delta", },
              org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest.class,
              org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitRequest.Builder.class);
          internal_static_waveserver_ProtocolSubmitResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_waveserver_ProtocolSubmitResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_waveserver_ProtocolSubmitResponse_descriptor,
              new java.lang.String[] { "OperationsApplied", "ErrorMessage", "HashedVersionAfterApplication", },
              org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.class,
              org.eclipse.ecf.wave.rpc.WaveClientRpc.ProtocolSubmitResponse.Builder.class);
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registerAllExtensions(registry);
          org.waveprotocol.wave.examples.fedone.rpc.Rpc.registerAllExtensions(registry);
          org.waveprotocol.wave.federation.Proto.registerAllExtensions(registry);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.waveprotocol.wave.examples.fedone.rpc.Rpc.getDescriptor(),
          org.waveprotocol.wave.federation.Proto.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
