/*******************************************************************************
 * Copyright (c) 2009 Composent, Inc. and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Composent, Inc. - initial API and implementation
 ******************************************************************************/
package org.eclipse.rt.internal.examples.webapp.hello;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * A 'hello world' servlet. This servlet, once registered in
 * {@link HelloComponent#activate()} will respond to http GET requests by sending
 * back a simple 'hello world' html page.
 * 
 */
public class HelloServlet extends HttpServlet {

	private static final long serialVersionUID = 1641775518541158975L;
    /**
     * The EclipseRT logo image file, relative to the bundle's resource directory.
     */
	private static final String LOGO_IMAGE = "/EclipseRT_Logo_Small.jpg";
    /**
     * The source code for this EclipseRT webapp, relative to the bundle's resource directory.
     */
	private static final String SRC_ZIP = "/org.eclipse.equinox.server.examples.webapp.hello_1.0.0.zip";
	
	/**
	 * The resource path to include in URLs exposed by the page.  This is the external resource path.
	 */
	private String resourcePath;

	public HelloServlet(String resourcePath) {
		this.resourcePath = resourcePath;
	}

	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		// Simply construct html and write it out
		resp.getWriter().write(getHtmlAsString());
	}

	private String getHtmlAsString() {
		StringBuffer sb = new StringBuffer(
				"<html><body><p><a href=\"http://www.eclipse.org/rt/\"><img src=\"");
		sb.append(resourcePath + LOGO_IMAGE).append("\"/></a></p><p></p>");
		sb
				.append("<br>Your <b><a href=\"http://www.eclipse.org/rt/\">EclipseRT</a></b> web server says: <h1>Hello World!</h1>")
				.append("<hr>");
		sb
				.append("<p>This page was generated by a simple servlet that uses the OSGi HttpService.  Here's some info about this <a href=\"http://www.eclipse.org/rt/\">EclipseRT</a> webapp</p>");
		sb.append("<TABLE WIDTH=100% BORDER=1 CELLPADDING=4 CELLSPACING=3>");
		sb.append("<COL WIDTH=128*><COL WIDTH=128*>");
		sb
				.append("<TR VALIGN=TOP><TD WIDTH=50%><P>NAME</P></TD><TD WIDTH=50%><P>VALUE</P></TD></TR>");
		sb
				.append(
						"<TR VALIGN=TOP><TD WIDTH=50%><P>Bundle Symbolic-Name</P></TD><TD WIDTH=50%><P>")
				.append(Activator.getDefault().getBundleSymbolicName()).append(
						"<BR></P></TD></TR>");
		sb
				.append(
						"<TR VALIGN=TOP><TD WIDTH=50%><P>Bundle Id</P></TD><TD WIDTH=50%><P>")
				.append(Activator.getDefault().getBundleId()).append(
						"<BR></P></TD></TR>");
		sb
				.append(
						"<TR VALIGN=TOP><TD WIDTH=50%><P>Component Class</P></TD><TD WIDTH=50%><P>")
				.append(HelloComponent.class.getName()).append(
						"<BR></P></TD></TR>");
		sb
				.append(
						"<TR VALIGN=TOP><TD WIDTH=50%><P>Servlet Class</P></TD><TD WIDTH=50%><P>")
				.append(this.getClass().getName()).append("<BR></P></TD></TR>");
		sb.append("</TABLE><p></p>");
		sb
				.append("<p>For more info about <a href=\"http://www.eclipse.org/rt/\">EclipseRT</a> project see the following links</p>");
		sb
				.append("<ul><li><a href=\"http://www.eclipse.org/rt/\">http://www.eclipse.org/rt</a></li>");
		sb
				.append("<li><a href=\"http://www.eclipse.org/equinox\">http://www.eclipse.org/equinox</a></li>");
		sb.append("</ul>");
		sb.append("<p>Source code for this <a href=\"http://www.eclipse.org/rt/\">EclipseRT</a> webapp can be found in <a href=\""+resourcePath+SRC_ZIP+"\">this zip</a>.  Once downloaded, the zip can be imported into an Eclipse workspace by choosing <b>File->Import...->Existing Projects Into Workspace->Next->Select archive file</b> within Eclipse.</p>");
				sb.append("</body></html>");
		return sb.toString();
	}
}
